// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using data;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241116221947_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("data.DAO.GroupSemesters", b =>
                {
                    b.Property<int>("group_semester_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("group_semester_id"));

                    b.Property<int>("Groups_id")
                        .HasColumnType("integer");

                    b.Property<int>("group_id")
                        .HasColumnType("integer");

                    b.Property<int>("semester_id")
                        .HasColumnType("integer");

                    b.Property<int>("semesters_id")
                        .HasColumnType("integer");

                    b.HasKey("group_semester_id");

                    b.HasIndex("Groups_id");

                    b.HasIndex("semesters_id");

                    b.ToTable("GroupSemesters");
                });

            modelBuilder.Entity("data.DAO.GroupSubjects", b =>
                {
                    b.Property<int>("GroupSubjects_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupSubjects_id"));

                    b.Property<int>("GroupSubjects_group_id")
                        .HasColumnType("integer");

                    b.Property<int>("Groups_id")
                        .HasColumnType("integer");

                    b.Property<int>("semester")
                        .HasColumnType("integer");

                    b.Property<int>("subject_id")
                        .HasColumnType("integer");

                    b.Property<int>("subject_id1")
                        .HasColumnType("integer");

                    b.HasKey("GroupSubjects_id");

                    b.HasIndex("Groups_id");

                    b.HasIndex("subject_id1");

                    b.ToTable("GroupSubjects");
                });

            modelBuilder.Entity("data.DAO.Groups", b =>
                {
                    b.Property<int>("Groups_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Groups_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Groups_id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("data.DAO.attendance", b =>
                {
                    b.Property<int>("attendance_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("attendance_id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("lesson_number")
                        .HasColumnType("integer");

                    b.Property<int>("status_id")
                        .HasColumnType("integer");

                    b.Property<int>("status_id1")
                        .HasColumnType("integer");

                    b.Property<int>("student_id")
                        .HasColumnType("integer");

                    b.Property<int>("students_id")
                        .HasColumnType("integer");

                    b.Property<int>("subject_id")
                        .HasColumnType("integer");

                    b.Property<int>("subject_id1")
                        .HasColumnType("integer");

                    b.HasKey("attendance_id");

                    b.HasIndex("status_id1");

                    b.HasIndex("students_id");

                    b.HasIndex("subject_id1");

                    b.ToTable("attendance");
                });

            modelBuilder.Entity("data.DAO.semesters", b =>
                {
                    b.Property<int>("semesters_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("semesters_id"));

                    b.Property<string>("semester_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("semesters_id");

                    b.ToTable("semesters");
                });

            modelBuilder.Entity("data.DAO.status", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("status_id"));

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("status_id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("data.DAO.students", b =>
                {
                    b.Property<int>("students_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("students_id"));

                    b.Property<int>("Groups_id")
                        .HasColumnType("integer");

                    b.Property<int>("group_id")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("students_id");

                    b.HasIndex("Groups_id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("data.DAO.subject", b =>
                {
                    b.Property<int>("subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("subject_id"));

                    b.Property<string>("name_subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("subject_id");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("data.DAO.GroupSemesters", b =>
                {
                    b.HasOne("data.DAO.Groups", "Groups")
                        .WithMany()
                        .HasForeignKey("Groups_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data.DAO.semesters", "semesters")
                        .WithMany()
                        .HasForeignKey("semesters_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("semesters");
                });

            modelBuilder.Entity("data.DAO.GroupSubjects", b =>
                {
                    b.HasOne("data.DAO.Groups", "Groups")
                        .WithMany()
                        .HasForeignKey("Groups_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data.DAO.subject", "subject")
                        .WithMany()
                        .HasForeignKey("subject_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("data.DAO.attendance", b =>
                {
                    b.HasOne("data.DAO.status", "status")
                        .WithMany()
                        .HasForeignKey("status_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data.DAO.students", "students")
                        .WithMany()
                        .HasForeignKey("students_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("data.DAO.subject", "subject")
                        .WithMany()
                        .HasForeignKey("subject_id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("status");

                    b.Navigation("students");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("data.DAO.students", b =>
                {
                    b.HasOne("data.DAO.Groups", "Groups")
                        .WithMany()
                        .HasForeignKey("Groups_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
